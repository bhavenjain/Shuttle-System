{"ast":null,"code":"var _jsxFileName = \"/Users/bhaven/bhaven/mern/shuttle/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Navbar from './Components/Navbar';\nimport Field from './Components/Field';\nimport SwapVerticalCircleOutlinedIcon from '@material-ui/icons/SwapVerticalCircleOutlined';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [location, setLocation] = useState({\n    from: '',\n    to: ''\n  });\n  const [suggestions, setSuggestions] = useState(['Botanical Garden', 'Pari Chowk', 'SNU']);\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n  const [activeSuggestionIndex, setActiveSuggestionIndex] = useState(0);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const fromValue = useRef(null);\n  const toValue = useRef(null);\n  let fromInp = false;\n  let toInp = false;\n  useEffect(() => {}, [location]);\n\n  const SuggestionsListComponent = () => {\n    return filteredSuggestions.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"suggestions\",\n      children: filteredSuggestions.map((suggestion, index) => {\n        let className; // Flag the active suggestion with a class\n\n        if (index === activeSuggestionIndex) {\n          className = 'suggestion-active';\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: className,\n          onClick: onClick,\n          children: suggestion\n        }, suggestion, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-suggestions\",\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"No suggestions, you're on your own!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n\n  const onClick = e => {\n    const value = e.target.innerText;\n    console.log(value);\n    setLocation({ ...location,\n      [e.target.name]: value\n    });\n    console.log(e);\n\n    if (e.target.name === 'to') {\n      toValue.current.value = value;\n    } else {\n      fromValue.current.value = value;\n    }\n\n    setFilteredSuggestions([]);\n    setActiveSuggestionIndex(0);\n    setShowSuggestions(false);\n  };\n\n  function handleChange(evt) {\n    evt.preventDefault();\n    const value = evt.target.value; // Filter our suggestions that don't contain the user's input\n\n    const unLinked = suggestions.filter(suggestion => suggestion.toLowerCase().indexOf(value.toLowerCase()) > -1);\n    setLocation({ ...location,\n      [evt.target.name]: value\n    });\n    setFilteredSuggestions(unLinked);\n    setActiveSuggestionIndex(0);\n    setShowSuggestions(true);\n  }\n\n  const onClickValueChange = event => {\n    const temp = location.from;\n    location.from = location.to;\n    location.to = temp;\n    fromValue.current.value = location.to;\n    toValue.current.value = location.from;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: fromValue,\n            className: \"input__field\",\n            type: \"text\",\n            placeholder: \" \",\n            name: \"from\",\n            id: \"from\",\n            value: location.from,\n            onChange: handleChange,\n            onClick: () => fromInp = true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input__label\",\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), showSuggestions && location && /*#__PURE__*/_jsxDEV(SuggestionsListComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: toValue,\n            className: \"input__field\",\n            type: \"text\",\n            placeholder: \" \",\n            name: \"to\",\n            id: \"to\",\n            value: location.to,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input__label\",\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), showSuggestions && location && /*#__PURE__*/_jsxDEV(SuggestionsListComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__verticalButton\",\n          onClick: onClickValueChange,\n          children: /*#__PURE__*/_jsxDEV(SwapVerticalCircleOutlinedIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dw8379jluAPsgmawE7GM5IuN7Os=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bhaven/bhaven/mern/shuttle/frontend/src/App.js"],"names":["React","useState","useEffect","useRef","Navbar","Field","SwapVerticalCircleOutlinedIcon","App","location","setLocation","from","to","suggestions","setSuggestions","filteredSuggestions","setFilteredSuggestions","activeSuggestionIndex","setActiveSuggestionIndex","showSuggestions","setShowSuggestions","fromValue","toValue","fromInp","toInp","SuggestionsListComponent","length","map","suggestion","index","className","onClick","e","value","target","innerText","console","log","name","current","handleChange","evt","preventDefault","unLinked","filter","toLowerCase","indexOf","onClickValueChange","event","temp"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Navbar from './Components/Navbar'\nimport Field from './Components/Field'\n\nimport SwapVerticalCircleOutlinedIcon from '@material-ui/icons/SwapVerticalCircleOutlined'\n\nimport './App.css'\n\nfunction App () {\n  const [location, setLocation] = useState({\n    from: '',\n    to: ''\n  })\n  const [suggestions, setSuggestions] = useState([\n    'Botanical Garden',\n    'Pari Chowk',\n    'SNU'\n  ])\n  const [filteredSuggestions, setFilteredSuggestions] = useState([])\n  const [activeSuggestionIndex, setActiveSuggestionIndex] = useState(0)\n  const [showSuggestions, setShowSuggestions] = useState(false)\n\n  const fromValue = useRef(null)\n  const toValue = useRef(null)\n  let fromInp = false\n  let toInp = false\n  useEffect(() => {}, [location])\n\n  const SuggestionsListComponent = () => {\n    return filteredSuggestions.length ? (\n      <ul className='suggestions'>\n        {filteredSuggestions.map((suggestion, index) => {\n          let className\n          // Flag the active suggestion with a class\n          if (index === activeSuggestionIndex) {\n            className = 'suggestion-active'\n          }\n          return (\n            <li className={className} key={suggestion} onClick={onClick}>\n              {suggestion}\n            </li>\n          )\n        })}\n      </ul>\n    ) : (\n      <div className='no-suggestions'>\n        <em>No suggestions, you're on your own!</em>\n      </div>\n    )\n  }\n\n  const onClick = e => {\n    const value = e.target.innerText\n\n    console.log(value)\n\n    setLocation({\n      ...location,\n      [e.target.name]: value\n    })\n\n    console.log(e)\n\n    if (e.target.name === 'to') {\n      toValue.current.value = value\n    } else {\n      fromValue.current.value = value\n    }\n\n    setFilteredSuggestions([])\n    setActiveSuggestionIndex(0)\n    setShowSuggestions(false)\n  }\n\n  function handleChange (evt) {\n    evt.preventDefault()\n    const value = evt.target.value\n\n    // Filter our suggestions that don't contain the user's input\n    const unLinked = suggestions.filter(\n      suggestion => suggestion.toLowerCase().indexOf(value.toLowerCase()) > -1\n    )\n\n    setLocation({\n      ...location,\n      [evt.target.name]: value\n    })\n    setFilteredSuggestions(unLinked)\n    setActiveSuggestionIndex(0)\n    setShowSuggestions(true)\n  }\n\n  const onClickValueChange = event => {\n    const temp = location.from\n    location.from = location.to\n    location.to = temp\n    fromValue.current.value = location.to\n    toValue.current.value = location.from\n  }\n\n  return (\n    <div className='app'>\n      <Navbar />\n      <form action=''>\n        <div className='app__form'>\n          <label className='input'>\n            <input\n              ref={fromValue}\n              className='input__field'\n              type='text'\n              placeholder=' '\n              name='from'\n              id='from'\n              value={location.from}\n              onChange={handleChange}\n              onClick={() => (fromInp = true)}\n            />\n\n            <span className='input__label'>From</span>\n            {showSuggestions && location && <SuggestionsListComponent />}\n          </label>\n          <label className='input'>\n            <input\n              ref={toValue}\n              className='input__field'\n              type='text'\n              placeholder=' '\n              name='to'\n              id='to'\n              value={location.to}\n              onChange={handleChange}\n            />\n\n            <span className='input__label'>To</span>\n            {showSuggestions && location && <SuggestionsListComponent />}\n          </label>\n          <div className='app__verticalButton' onClick={onClickValueChange}>\n            <SwapVerticalCircleOutlinedIcon fontSize='large' />\n          </div>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}