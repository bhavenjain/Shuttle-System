{"ast":null,"code":"var _jsxFileName = \"/Users/bhaven/bhaven/mern/shuttle/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Navbar from './Components/Navbar';\nimport Field from './Components/Field';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport SwapVerticalCircleOutlinedIcon from '@material-ui/icons/SwapVerticalCircleOutlined';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [location, setLocation] = useState({\n    from: '',\n    to: ''\n  });\n  const [suggestions, setSuggestions] = useState(['Botanical Garden', 'Pari Chowk', 'SNU']);\n  const [value, setValue] = React.useState(options[0]);\n  const fromValue = useRef(null);\n  const toValue = useRef(null);\n  useEffect(() => {}, [location]);\n\n  function handleChange(evt) {\n    evt.preventDefault();\n    const value = evt.target.value;\n    setLocation({ ...location,\n      [evt.target.name]: value\n    });\n  }\n\n  const onClickValueChange = event => {\n    const temp = location.from;\n    location.from = location.to;\n    location.to = temp;\n    fromValue.current.value = location.to;\n    toValue.current.value = location.from;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__form\",\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          value: location,\n          onChange: handleChange,\n          inputValue: inputValue,\n          onInputChange: (event, newInputValue) => {\n            setInputValue(newInputValue);\n          },\n          id: \"controllable-states-demo\",\n          options: options,\n          sx: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Controllable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__verticalButton\",\n          onClick: onClickValueChange,\n          children: /*#__PURE__*/_jsxDEV(SwapVerticalCircleOutlinedIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nLP0rjHHy4RQ95wg7hAICH1mti0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bhaven/bhaven/mern/shuttle/frontend/src/App.js"],"names":["React","useState","useEffect","useRef","Navbar","Field","TextField","Autocomplete","SwapVerticalCircleOutlinedIcon","App","location","setLocation","from","to","suggestions","setSuggestions","value","setValue","options","fromValue","toValue","handleChange","evt","preventDefault","target","name","onClickValueChange","event","temp","current","inputValue","newInputValue","setInputValue","width","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Navbar from './Components/Navbar'\nimport Field from './Components/Field'\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\n\nimport SwapVerticalCircleOutlinedIcon from '@material-ui/icons/SwapVerticalCircleOutlined'\n\nimport './App.css'\n\nfunction App () {\n  const [location, setLocation] = useState({\n    from: '',\n    to: ''\n  })\n  const [suggestions, setSuggestions] = useState([\n    'Botanical Garden',\n    'Pari Chowk',\n    'SNU'\n  ])\n\n  const [value, setValue] = React.useState(options[0])\n\n  const fromValue = useRef(null)\n  const toValue = useRef(null)\n\n  useEffect(() => {}, [location])\n\n  function handleChange (evt) {\n    evt.preventDefault()\n    const value = evt.target.value\n    setLocation({\n      ...location,\n      [evt.target.name]: value\n    })\n  }\n\n  const onClickValueChange = event => {\n    const temp = location.from\n    location.from = location.to\n    location.to = temp\n    fromValue.current.value = location.to\n    toValue.current.value = location.from\n  }\n\n  return (\n    <div className='app'>\n      <Navbar />\n      <form action=''>\n        <div className='app__form'>\n          <Autocomplete\n            value={location}\n            onChange={handleChange}\n            inputValue={inputValue}\n            onInputChange={(event, newInputValue) => {\n              setInputValue(newInputValue)\n            }}\n            id='controllable-states-demo'\n            options={options}\n            sx={{ width: 300 }}\n            renderInput={params => (\n              <TextField {...params} label='Controllable' />\n            )}\n          />\n\n          <div className='app__verticalButton' onClick={onClickValueChange}>\n            <SwapVerticalCircleOutlinedIcon fontSize='large' />\n          </div>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}