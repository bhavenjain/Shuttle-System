{"ast":null,"code":"var _jsxFileName = \"/Users/bhaven/bhaven/mern/shuttle/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Navbar from './Components/Navbar';\nimport Field from './Components/Field';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport SwapVerticalCircleOutlinedIcon from '@material-ui/icons/SwapVerticalCircleOutlined';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = ['Botanical Garden', 'Pari Chowk', 'SNU'];\n\nfunction App() {\n  _s();\n\n  const [location, setLocation] = useState({\n    from: '',\n    to: ''\n  });\n  const [suggestions, setSuggestions] = useState(options[2]);\n  const [from, setfrom] = useState('');\n  const fromValue = useRef(null);\n  const toValue = useRef(null);\n  useEffect(() => {\n    console.log(from);\n  }, [from]);\n\n  function handleChange(evt) {\n    evt.preventDefault();\n    const value = evt.target.value;\n    setLocation({ ...location,\n      [evt.target.name]: value\n    });\n  }\n\n  const onClickValueChange = event => {\n    const temp = location.from;\n    location.from = location.to;\n    location.to = temp;\n    console.log(location.to);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__form\",\n        children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n          name: 'from',\n          value: suggestions,\n          onChange: (event, newValue) => {\n            setSuggestions(newValue);\n          },\n          onInputChange: (event, newInputValue) => {\n            setfrom(newInputValue);\n          },\n          id: \"controllable-states-demo\",\n          options: options,\n          sx: {\n            width: 300\n          },\n          renderTags: \"hello\",\n          renderInput: params => {\n            return /*#__PURE__*/_jsxDEV(TextField, {\n              className: \"autoCompleteTxt\",\n              ...params,\n              label: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__verticalButton\",\n          onClick: onClickValueChange,\n          children: /*#__PURE__*/_jsxDEV(SwapVerticalCircleOutlinedIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iEfJVz2mjvoRWjTh1AEbwEyzg/g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bhaven/bhaven/mern/shuttle/frontend/src/App.js"],"names":["React","useState","useEffect","useRef","Navbar","Field","TextField","Autocomplete","SwapVerticalCircleOutlinedIcon","options","App","location","setLocation","from","to","suggestions","setSuggestions","setfrom","fromValue","toValue","console","log","handleChange","evt","preventDefault","value","target","name","onClickValueChange","event","temp","newValue","newInputValue","width","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Navbar from './Components/Navbar'\nimport Field from './Components/Field'\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\n\nimport SwapVerticalCircleOutlinedIcon from '@material-ui/icons/SwapVerticalCircleOutlined'\n\nimport './App.css'\n\nconst options = ['Botanical Garden', 'Pari Chowk', 'SNU']\n\nfunction App () {\n  const [location, setLocation] = useState({\n    from: '',\n    to: ''\n  })\n  const [suggestions, setSuggestions] = useState(options[2])\n  const [from, setfrom] = useState('')\n  const fromValue = useRef(null)\n  const toValue = useRef(null)\n\n  useEffect(() => {\n    console.log(from)\n  }, [from])\n\n  function handleChange (evt) {\n    evt.preventDefault()\n    const value = evt.target.value\n    setLocation({\n      ...location,\n      [evt.target.name]: value\n    })\n  }\n\n  const onClickValueChange = event => {\n    const temp = location.from\n    location.from = location.to\n    location.to = temp\n    console.log(location.to)\n  }\n\n  return (\n    <div className='app'>\n      <Navbar />\n      <form action=''>\n        <div className='app__form'>\n          <Autocomplete\n            name={'from'}\n            value={suggestions}\n            onChange={(event, newValue) => {\n              setSuggestions(newValue)\n            }}\n            onInputChange={(event, newInputValue) => {\n              setfrom(newInputValue)\n            }}\n            id='controllable-states-demo'\n            options={options}\n            sx={{ width: 300 }}\n            renderTags='hello'\n            renderInput={params => {\n              return (\n                <TextField\n                  className='autoCompleteTxt'\n                  {...params}\n                  label='From'\n                />\n              )\n            }}\n          />\n\n          {/* <Autocomplete\n            value={suggestions}\n            onChange={(event, newValue) => {\n              setSuggestions(newValue)\n            }}\n            inputValue={location.from}\n            onInputChange={(event, newInputValue) => {\n              setLocation({\n                ...location,\n                to: newInputValue\n              })\n            }}\n            id='controllable-states-demo'\n            options={options}\n            sx={{ width: 300 }}\n            renderInput={params => <TextField {...params} label='To' />}\n          /> */}\n          <div className='app__verticalButton' onClick={onClickValueChange}>\n            <SwapVerticalCircleOutlinedIcon fontSize='large' />\n          </div>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}